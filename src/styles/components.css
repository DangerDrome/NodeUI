/*
 * NodeUI Component Styles
 * All non-icon, non-variable styles
 */

/* 2. GLOBAL STYLES
-------------------------------------------------------------------------------- */
*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: var(--font-sans);
    background-color: var(--color-bg-default);
    color: var(--color-text-default);
    overflow: hidden;
    height: 100vh;
    width: 100vw;
}


/* 3. MAIN LAYOUT CONTAINERS
-------------------------------------------------------------------------------- */
#app {
    display: flex;
    height: 100%;
}

.panel {
    background-color: var(--color-bg-panel);
    border-color: var(--color-border-default);
    height: 100%;
    flex-shrink: 0;
}

#file-tree-panel {
    width: var(--panel-width);
    border-right: 1px solid var(--color-border-default);
}

#canvas-container {
    flex-grow: 1;
    height: 100%;
    position: relative;
    overflow: hidden;
    cursor: default;
    background-color: var(--color-bg-canvas);
}

#pinned-node-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 1000;
}

#canvas-container.is-panning {
    cursor: grabbing;
}

#canvas-container.is-routing,
#canvas-container.is-cutting {
    cursor: crosshair;
}

#canvas-container.is-drop-target {
    border: 2px dashed var(--color-accent);
    background-color: rgba(62, 207, 142, 0.1);
}


/* 4. CANVAS ELEMENTS
-------------------------------------------------------------------------------- */
.node-ui-canvas,
.node-container,
.group-container,
.grid-canvas {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
}

.node-container,
.group-container {
    transform-origin: 0 0;
}

/* Explicit z-index to maintain proper layering */
.grid-canvas {
    z-index: 0;
}

.group-container {
    z-index: 1;
}

.node-ui-canvas {
    z-index: 500; /* Between groups (0-499) and nodes (10000+) */
}

.node-container {
    z-index: 1000;
}

.grid-dot {
    fill: var(--color-border-default);
}


/* 5. NODE STYLES
-------------------------------------------------------------------------------- */
/* Base Node Style */
.node {
    position: absolute;
    pointer-events: auto;
    background-color: var(--color-node-default-bg);
    border: var(--border-width-thin) solid var(--color-node-default-border);
    border-radius: var(--radius-medium);
    box-shadow: var(--shadow-small);
    display: flex;
    flex-direction: column;
    user-select: none;
    cursor: move;
    backdrop-filter: blur(10px);
    min-width: var(--panel-width);
    min-height: var(--panel-height);
}

/* Node States */
/** Node hover state */
.node:hover {
    border-color: var(--icon-color, var(--color-accent));
}

/** Node dragging state */
.node.is-dragging {
    border-color: var(--color-accent);
    box-shadow: var(--shadow-large);
    z-index: 1000;
}

/** Node selected state */
.node.is-selected {
    border-color: var(--icon-color, var(--color-accent));
    box-shadow: 0 0 0 2px var(--color-accent-glow), var(--shadow-large);
}

/** Pinned node state */
.node.is-pinned .node-pin-icon {
    opacity: 1;
    color: var(--node-accent-color, var(--color-accent)) !important;
}

/* Node Parts */
/** Node title bar container */
.node-title-bar {
    display: flex;
    align-items: center;
    gap: 8px; /* Add gap for spacing between items */
    position: relative;
    background-color: transparent;
    color: var(--color-text-subtle);
    padding: 16px;
    font-size: var(--font-size-small);
    font-weight: 600;
    user-select: none;
    border-bottom: var(--border-width-thin) solid var(--icon-color, var(--color-border-default));
    border-radius: calc(var(--radius-medium) - 1px) calc(var(--radius-medium) - 1px) 0 0;
}

/** Base style for icons in the node title bar */
.node-icon {
    flex-shrink: 0; /* Prevent icon from shrinking */
    display: flex;
    align-items: center;
    justify-content: center;
    opacity: 0.5;
}

/** Pin icon style */
.node-pin-icon {
    flex-shrink: 0;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
    padding: 2px;
    opacity: 0;
    transition: opacity 0.2s, background-color 0.2s, color 0.2s, filter 0.2s;
}

/** Cycle color icon style */
.node-cycle-color-icon {
    flex-shrink: 0; /* Prevent icons from shrinking */
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
    padding: 2px;
    opacity: 0;
    transition: opacity 0.2s, background-color 0.2s, color 0.2s, filter 0.2s;
}

/** Settings icon style */
.node-settings-icon {
    opacity: 0.5;
    min-width: 20px;
}

/** Show icons on node hover */
.node:hover .node-pin-icon,
.node:hover .node-cycle-color-icon,
.node:hover .node-settings-icon {
    opacity: 1;
}

/** Hover effect for title bar icons */
.node-pin-icon:hover,
.node-cycle-color-icon:hover,
.node-settings-icon:hover {
    background-color: var(--icon-color-bg, var(--color-bg-hover));
    filter: brightness(1.2);
}

/** Node title text style */
.node-title-text {
    flex-grow: 1; /* Allow title to take up remaining space */
    text-align: center; /* Center the title text */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    padding: 0 4px; /* Add some padding */
}

/** Main content area of the node */
.node-content {
    padding: 16px;
    flex-grow: 1;
    font-size: var(--font-size-medium);
    color: var(--color-text-default);
    overflow-y: auto;
    overflow-x: hidden;
    overflow-wrap: break-word;
    white-space: pre-wrap;
    outline: none; /* Disable default browser outline for contenteditable */
}

/** Cursor for editable content */
.node-content[contenteditable="true"] {
    cursor: text;
}

/** H1 heading style inside node content */
.node-content h1 {
    font-size: var(--h1-font-size);
    font-weight: var(--h1-font-weight);
    margin: 0;
    padding: 0;
    color: var(--h1-color);
}

/* Add styles for images inside node content */
.node-content img {
    max-width: 100%;
    height: auto;
    display: block;
    border-radius: var(--radius-small);
    margin-top: 8px;
}

/* Add styles for tables inside node content */
.node-content table {
    width: 100%;
    border-collapse: collapse;
    margin: 1em 0;
    font-size: var(--font-size-small);
}

/** Table header and cell style */
.node-content th,
.node-content td {
    border: var(--border-width-thin) solid var(--color-border-default);
    padding: 8px;
    text-align: left;
}

/** Table header specific style */
.node-content th {
    background-color: var(--color-bg-hover);
    font-weight: 600;
    color: var(--color-text-emphasis);
}

.node-content tr:nth-child(even) {
    background-color: rgba(0,0,0,0.1);
}

/* Fix for list indentation after padding change */
.node-content ul,
.node-content ol {
    padding-left: 24px; /* Adjust default list padding */
    margin: 1em 0;
}

/* Resize Handles */
.resize-handle {
    position: absolute;
    background: transparent; /* Handles are invisible */
    z-index: 1001;
}

.resize-handle.n { top: -5px; left: 5px; right: 5px; height: 10px; cursor: ns-resize; }
.resize-handle.s { bottom: -5px; left: 5px; right: 5px; height: 10px; cursor: ns-resize; }
.resize-handle.w { left: -5px; top: 5px; bottom: 5px; width: 10px; cursor: ew-resize; }
.resize-handle.e { right: -5px; top: 5px; bottom: 5px; width: 10px; cursor: ew-resize; }
.resize-handle.nw { top: -5px; left: -5px; width: 12px; height: 12px; cursor: nwse-resize; }
.resize-handle.ne { top: -5px; right: -5px; width: 12px; height: 12px; cursor: nesw-resize; }
.resize-handle.sw { bottom: -5px; left: -5px; width: 12px; height: 12px; cursor: nesw-resize; }
.resize-handle.se { bottom: -5px; right: -5px; width: 12px; height: 12px; cursor: nwse-resize; }

.resize-handle.se::after {
    content: '';
    position: absolute;
    display: block;
    width: 8px;
    height: 8px;
    border-bottom: 2px solid var(--icon-color, var(--color-text-subtle));
    border-right: 2px solid var(--icon-color, var(--color-text-subtle));
    right: -2px;
    bottom: -2px;
    opacity: 0;
    transition: opacity 0.2s;
}

.node:hover .resize-handle.se::after {
    opacity: 1;
}

/* Specific style for minimalist routing nodes */
.routing-node {
    border-radius: 50%;
    min-width: 30px !important;
    min-height: 30px !important;
    background-color: var(--color-bg-panel);
    display: flex;
    align-items: center;
    justify-content: center;
}

.routing-node .node-icon {
    position: static;
    transform: none;
    opacity: 1;
    color: var(--icon-color, var(--color-text-subtle));
}

/* Style for group nodes */
.group-node {
    background-color: rgba(18, 18, 18, 0.95); /* Very transparent so edges show through */
    border-style: dashed;
    backdrop-filter: none; /* Override the base node blur effect */
    /* Swap default and hover states for groups */
    border-color: var(--icon-color, var(--color-accent));
}

/* On hover, groups revert to their base color */
.group-node:hover {
    border-color: var(--color-node-default-border);
}

/* Override hover state for colored groups */
.group-node[data-color="red"]:hover { border-color: var(--color-node-red-border); }
.group-node[data-color="green"]:hover { border-color: var(--color-node-green-border); }
.group-node[data-color="blue"]:hover { border-color: var(--color-node-blue-border); }
.group-node[data-color="yellow"]:hover { border-color: var(--color-node-yellow-border); }
.group-node[data-color="purple"]:hover { border-color: var(--color-node-purple-border); }

.group-node .node-title-bar {
    background-color: transparent;
    border-bottom-color: transparent;
}

/* 6. NODE HANDLE STYLES
-------------------------------------------------------------------------------- */
.node-handle-zone {
    position: absolute;
    z-index: 10;
    cursor: crosshair;
    transition: background-color 0.2s ease-in-out;
    display: flex;
    justify-content: center;
    align-items: center;
}

.node-handle-zone:hover {
    background-color: rgba(62, 207, 142, 0);
}

/* Visible handle that appears on hover */
.node-handle {
    width: calc(12px * var(--handle-size-mult));
    height: calc(12px * var(--handle-size-mult));
    background-color: var(--handle-color, var(--color-accent));
    border: 2px solid var(--color-bg-panel);
    border-radius: 50%;
    opacity: 0;
    transition: opacity 0.2s ease-in-out;
    pointer-events: none;
}

.node-handle-zone:hover .node-handle,
.node-handle.is-connected {
    opacity: 1;
}

/* Handle Positioning */
.node-handle-zone.top {
    top: calc(-10px * var(--handle-offset-mult) - 10px * var(--handle-zone-mult));
    left: 0;
    width: 100%;
    height: calc(20px * var(--handle-zone-mult));
}

.node-handle-zone.right {
    top: 0;
    right: calc(-10px * var(--handle-offset-mult) - 10px * var(--handle-zone-mult));
    width: calc(20px * var(--handle-zone-mult));
    height: 100%;
}

.node-handle-zone.bottom {
    bottom: calc(-10px * var(--handle-offset-mult) - 10px * var(--handle-zone-mult));
    left: 0;
    width: 100%;
    height: calc(20px * var(--handle-zone-mult));
}

.node-handle-zone.left {
    top: 0;
    left: calc(-10px * var(--handle-offset-mult) - 10px * var(--handle-zone-mult));
    width: calc(20px * var(--handle-zone-mult));
    height: 100%;
}

.node-handle.connected {
    opacity: 1;
}

.node:hover .node-handle-zone .node-handle {
    opacity: 1;
}

/* Custom scrollbar for node content */
.node-content::-webkit-scrollbar {
    width: 16px;
}

.node-content::-webkit-scrollbar-track {
    background: transparent;
}

.node-content::-webkit-scrollbar-thumb {
    background-color: transparent; /* Hide by default */
    border-radius: 8px;
    border: 6px solid transparent;
    background-clip: content-box;
    cursor: default;
    min-height: 40px;
    transition: background-color 0.2s; /* Smooth transition */
}

/* Show scrollbar thumb on hover or when node is selected */
.node:hover .node-content::-webkit-scrollbar-thumb,
.node.is-selected .node-content::-webkit-scrollbar-thumb {
    background-color: var(--icon-color);
}

.node-content::-webkit-scrollbar-thumb:hover {
    filter: brightness(1.2);
}


/* 7. EDGE STYLES
-------------------------------------------------------------------------------- */
/* 
 * Arrowhead Color Control
 * The arrowhead's fill is controlled by the `.edge-arrowhead` class.
 * By default, it's set to 'currentColor', which means its color is inherited
 * from the 'color' CSS property of the .edge path it is attached to.
 * To change the arrow color, change the 'color' property in the rules below.
 */

.edge {
    fill: none;
    stroke-width: 2px;
    stroke-linecap: round;
    transition: stroke-width 0.2s ease, stroke 0.2s ease, color 0.2s ease;
    stroke: var(--color-node-default-border-hover);
    color: var(--color-node-default-border-hover);
}

.edge-arrowhead {
    /* The fill is now set directly on the marker path via JS/CSS variables. */
    /* This class is kept for potential future use but has no direct styling. */
    transition: fill 0.2s ease;
}

.edge-arrowhead.is-hovered {
    fill: var(--color-node-default-border-hover);
}

/* Utility class to hide an arrowhead on a specific edge */
.edge.no-arrowhead {
    marker-end: none;
}

g.is-hovered .edge {
    stroke: var(--color-node-default-border-hover);
    color: var(--color-node-default-border-hover);
    stroke-width: 3px;
}

/* Color overrides based on parent group's data-color attribute */
g[data-color="red"] .edge { stroke: var(--color-node-red-border); color: var(--color-node-red-border); }
g[data-color="red"].is-hovered .edge { stroke: var(--color-node-red-border-hover); color: var(--color-node-red-border-hover); }

g[data-color="green"] .edge { stroke: var(--color-node-green-border); color: var(--color-node-green-border); }
g[data-color="green"].is-hovered .edge { stroke: var(--color-node-green-border-hover); color: var(--color-node-green-border-hover); }

g[data-color="blue"] .edge { stroke: var(--color-node-blue-border); color: var(--color-node-blue-border); }
g[data-color="blue"].is-hovered .edge { stroke: var(--color-node-blue-border-hover); color: var(--color-node-blue-border-hover); }

g[data-color="yellow"] .edge { stroke: var(--color-node-yellow-border); color: var(--color-node-yellow-border); }
g[data-color="yellow"].is-hovered .edge { stroke: var(--color-node-yellow-border-hover); color: var(--color-node-yellow-border-hover); }

g[data-color="purple"] .edge { stroke: var(--color-node-purple-border); color: var(--color-node-purple-border); }
g[data-color="purple"].is-hovered .edge { stroke: var(--color-node-purple-border-hover); color: var(--color-node-purple-border-hover); }

.edge-hit-area {
    fill: none;
    stroke: transparent;
    stroke-width: 40px;
    stroke-linecap: round;
    cursor: pointer;
    pointer-events: stroke;
}

.edge.is-selected {
    stroke-width: 4px;
    stroke-dasharray: 8, 8;
}

.edge.is-droppable {
    stroke-dasharray: 8, 8;
}

.edge.edge-drawing {
    stroke: var(--edge-draw-color, var(--color-accent));
    stroke-dasharray: 5, 5;
}

.edge-routing-handle {
    fill: var(--color-accent);
    stroke: var(--color-bg-panel);
    stroke-width: 2px;
    cursor: move;
    opacity: 0;
    transition: opacity 0.2s;
}

.edge:hover .edge-routing-handle,
.edge-routing-handle:hover {
    opacity: 1;
}

.edge-label-background {
    stroke-width: 1px;
    display: none; /* Hidden by default, shown via JS */
}

/* Color overrides for the label background */
g[data-color="default"] .edge-label-background { fill: var(--color-node-default-border-hover); stroke: var(--color-node-default-border-hover); }
g[data-color="red"] .edge-label-background { fill: var(--color-node-red-border-hover); stroke: var(--color-node-red-border-hover); }
g[data-color="green"] .edge-label-background { fill: var(--color-node-green-border-hover); stroke: var(--color-node-green-border-hover); }
g[data-color="blue"] .edge-label-background { fill: var(--color-node-blue-border-hover); stroke: var(--color-node-blue-border-hover); }
g[data-color="yellow"] .edge-label-background { fill: var(--color-node-yellow-border-hover); stroke: var(--color-node-yellow-border-hover); }
g[data-color="purple"] .edge-label-background { fill: var(--color-node-purple-border-hover); stroke: var(--color-node-purple-border-hover); }

.edge-label {
    fill: var(--color-bg-panel);
    font-size: 12px;
    font-family: var(--font-sans);
    pointer-events: none; /* So it doesn't interfere with edge clicking */
    dominant-baseline: middle;
}

.edge-label-editor {
    position: absolute;
    background-color: var(--color-bg-default);
    border: 1px solid var(--color-accent);
    border-radius: var(--radius-small);
    color: var(--color-text-emphasis);
    font-family: var(--font-sans);
    font-size: 12px; /* Match the SVG label font size */
    padding: 4px 6px;
    text-align: center;
    z-index: 100001; /* Above context menu */
    transform-origin: center center;
    outline: none;
    box-shadow: var(--shadow-large);
}


/* 8. UI TOOL STYLES
-------------------------------------------------------------------------------- */
.node-popover {
    position: absolute;
    bottom: 100%;
    left: 50%;
    transform: translate(-50%, 10px);
    width: 200px;
    background-color: var(--color-bg-panel);
    border: 1px solid var(--color-border-default);
    border-radius: 8px;
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.3);
    padding: 12px;
    z-index: 20;
    opacity: 0;
    transition: transform 0.3s cubic-bezier(0.2, 1, 0.3, 1), opacity 0.2s ease-out;
    pointer-events: none;
}

.node-popover::after {
    content: '';
    position: absolute;
    bottom: -6px;
    left: 50%;
    transform: translateX(-50%);
    width: 0; 
    height: 0; 
    border-left: 6px solid transparent;
    border-right: 6px solid transparent;
    border-top: 6px solid var(--color-border-default);
}

.node.is-popover-open .node-popover {
    transform: translate(-50%, -40px);
    opacity: 1;
    pointer-events: auto;
}

.popover-section {
    margin-bottom: 12px;
}

.popover-section:last-child {
    margin-bottom: 0;
}

.popover-input {
    width: 100%;
    background-color: var(--color-bg-default);
    border: 1px solid var(--color-border-default);
    border-radius: var(--radius-small);
    padding: 6px 8px;
    color: var(--color-text-default);
    box-sizing: border-box;
}

.popover-color-palette {
    display: flex;
    gap: 8px;
}

.popover-color-swatch {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    cursor: pointer;
    border: 2px solid transparent;
    transition: all 0.2s;
}

.popover-color-swatch:hover {
    transform: scale(1.1);
}

.popover-section-divider {
    height: 1px;
    background-color: var(--color-border-default);
    margin: 8px 0;
}

.popover-delete-button {
    width: 100%;
    background: none;
    border: none;
    color: var(--color-text-subtle);
    padding: 8px;
    border-radius: var(--radius-small);
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 8px;
    font-weight: 500;
    text-align: left;
    transition: background-color 0.2s, color 0.2s;
}

.popover-delete-button:hover {
    background-color: var(--icon-color, var(--color-danger));
    color: var(--color-bg-panel);
}

.cut-line {
    stroke: var(--color-danger);
    stroke-width: 2px;
    stroke-linecap: round;
    stroke-dasharray: 5, 5;
}

.snap-guide {
    stroke-width: 1px;
    stroke-dasharray: 4, 4;
}

.selection-box {
    position: absolute;
    border: 1px solid var(--color-accent);
    background-color: rgba(62, 207, 142, 0.1);
    pointer-events: none;
    z-index: 9999;
    display: none;
}

.context-menu {
    position: absolute;
    display: none;
    background-color: var(--color-bg-panel);
    border: 1px solid var(--color-border-default);
    border-radius: var(--radius-small);
    box-shadow: var(--shadow-small);
    z-index: 100000;
    min-width: 180px;
    padding: 4px;
}

.context-menu ul {
    list-style: none;
    padding: 0;
    margin: 0;
}

.context-menu li {
    display: flex;
    align-items: center;
    gap: 8px;
    padding: 8px 12px;
    cursor: pointer;
    border-radius: var(--radius-small);
    color: var(--color-text-default);
    font-size: var(--font-size-medium);
}

.context-menu-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    color: var(--color-text-subtle);
    width: 24px;
    height: 24px;
}

.context-menu-swatch {
    display: inline-block;
    width: 16px;
    height: 16px;
    border-radius: 50%;
    border: 1px solid var(--color-border-default);
    margin: 4px; /* Center it inside the 24x24 icon container */
}

.context-menu-separator {
    height: 0;
    padding: 0;
    margin: 8px 12px;
    border-top: 2px solid var(--color-border-default);
    background-color: transparent;
    cursor: default;
    display: block;
}

.context-menu li:hover {
    background-color: var(--color-bg-hover);
    color: var(--color-text-emphasis);
}

.context-menu li.context-menu-separator:hover {
    background-color: transparent;
}

.context-menu li.is-disabled {
    color: var(--color-text-subtle);
    background-color: transparent;
    cursor: not-allowed;
    opacity: 0.5;
}

.context-menu li.has-submenu {
    justify-content: space-between;
}

.submenu-arrow {
    margin-left: 16px;
    opacity: 0.5;
    display: flex;
    align-items: center;
}

.context-menu-input {
    width: 100%;
    background-color: var(--color-bg-default);
    border: 0px solid var(--color-bg-default);
    border-radius: var(--radius-small);
    padding: 6px 8px;
    color: var(--color-text-default);
    box-sizing: border-box;
    font: inherit;
    outline: none;
}

/* 9. RESPONSIVE STYLES
-------------------------------------------------------------------------------- */
@media (max-width: 768px) {
    .panel {
        position: absolute;
        top: 0;
        bottom: 0;
        z-index: 10;
        transition: transform 0.3s ease-in-out;
    }

    #file-tree-panel {
        transform: translateX(-100%);
    }

    #file-tree-panel.open {
        transform: translateX(0);
    }
}

/* 10. NODE COLOR VARIANTS
-------------------------------------------------------------------------------- */
.node[data-color="default"] { --color-accent-glow: rgba(230, 230, 230, 0.5); }
.node[data-color="red"] { background-color: var(--color-node-red-bg); border-color: var(--color-node-red-border); --color-accent-glow: var(--color-node-red-border); }
.node[data-color="red"] .node-title-bar { color: #ff8a80; }
.node[data-color="green"] { background-color: var(--color-node-green-bg); border-color: var(--color-node-green-border); --color-accent-glow: var(--color-node-green-border); }
.node[data-color="green"] .node-title-bar { color: #b9f6ca; }
.node[data-color="blue"] { background-color: var(--color-node-blue-bg); border-color: var(--color-node-blue-border); --color-accent-glow: var(--color-node-blue-border); }
.node[data-color="blue"] .node-title-bar { color: #82b1ff; }
.node[data-color="yellow"] { background-color: var(--color-node-yellow-bg); border-color: var(--color-node-yellow-border); --color-accent-glow: var(--color-node-yellow-border); }
.node[data-color="yellow"] .node-title-bar { color: #ffe57f; }
.node[data-color="purple"] { background-color: var(--color-node-purple-bg); border-color: var(--color-node-purple-border); --color-accent-glow: var(--color-node-purple-border); }
.node[data-color="purple"] .node-title-bar { color: #e1b5ff; }

/* 11. SPECIALIZED NODE TYPES
-------------------------------------------------------------------------------- */
.routing-cut-line {
    stroke: var(--color-node-blue-border);
    stroke-width: 2px;
    stroke-linecap: round;
    stroke-dasharray: 5, 5;
}

/* Log Node Styles */
.log-node .node-content {
    padding: 0;
    overflow: hidden;
}

.log-container-wrapper {
    height: 100%;
    padding: 4px;
}

.log-container {
    height: 100%;
    overflow-y: auto;
    font-family: var(--font-family-mono);
    font-size: var(--font-size-small);
    padding: 8px;
    padding-right: 18px; /* Add extra padding to move scrollbar left */
    white-space: pre-wrap;
    word-break: break-all;
}

.log-container[contenteditable="true"] {
    cursor: text;
    background-color: rgba(0,0,0,0.3);
    outline: 0px;
}

.log-entry {
    white-space: pre-wrap;
    word-break: break-all;
    margin-bottom: 4px;
}

.log-event-name {
    color: var(--icon-color);
    font-weight: bold;
}

/* Custom Scrollbar for Log Node */
.log-container::-webkit-scrollbar {
    width: 16px;
}

.log-container::-webkit-scrollbar-track {
    background: transparent; /* The track will be invisible */
}

.log-container::-webkit-scrollbar-thumb {
    background-color: transparent; /* Hide by default */
    border-radius: 8px;
    border: 6px solid transparent; /* Creates padding around the thumb */
    background-clip: content-box;
    transition: background-color 0.2s, filter 0.2s; /* Add transition */
    cursor: default;
    min-height: 40px;
}

/* Show scrollbar on hover or when log node is selected */
.log-node:hover .log-container::-webkit-scrollbar-thumb,
.log-node.is-selected .log-container::-webkit-scrollbar-thumb {
    background-color: var(--icon-color);
}

.log-container::-webkit-scrollbar-thumb:hover {
    filter: brightness(1.2);
}

/* Settings Node Styles */
.settings-node .node-content {
    padding: 0;
    overflow: hidden;
}

.settings-container-wrapper {
    height: 100%;
    padding: 4px;
}

.settings-container {
    height: 100%;
    overflow-y: auto;
    padding: 16px;
    padding-right: 26px; /* Add extra padding to move scrollbar left */
    display: flex;
    flex-direction: column;
    gap: 24px;
    background-color: rgba(0,0,0,0.2);
}

.settings-section {
    margin-bottom: 24px;
}

.context-menu-settings-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 16px;
    margin-top: 16px;
}

.context-menu-item-control {
    background-color: var(--color-bg-default);
    border-radius: var(--radius-small);
    padding: 12px;
    border: 1px solid var(--color-border-default);
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.context-menu-item-title {
    font-weight: 600;
    color: var(--color-text-emphasis);
    padding-bottom: 8px;
    border-bottom: 1px solid var(--color-border-default);
    margin-bottom: 4px;
}

.settings-node .settings-section h3 {
    color: var(--color-text-emphasis);
    font-size: var(--font-size-medium);
    font-weight: 600;
    margin-bottom: 12px;
    border-bottom: 1px solid var(--node-accent-color, var(--color-border-default));
    padding-bottom: 8px;
    transition: border-color 0.2s;
}

.settings-node .settings-section h4 {
    color: var(--color-text-subtle);
    font-size: 11px;
    font-weight: 500;
    margin-bottom: 10px;
    margin-top: 20px;
    text-transform: uppercase;
    letter-spacing: 0.5px;
}

.input-with-icon-preview {
    display: flex;
    align-items: center;
    gap: 8px;
    min-width: 0; /* Allow the container to shrink smaller than its content */
}

.icon-preview {
    flex-shrink: 0;
    width: 20px;
    height: 20px;
    background-color: var(--color-text-emphasis);
    border: 1px solid var(--color-border-default);
    border-radius: var(--radius-small);
    padding: 2px;
    /* This leverages the existing icon system */
    -webkit-mask-size: contain;
    mask-size: contain;
    -webkit-mask-position: center;
    mask-position: center;
    -webkit-mask-repeat: no-repeat;
    mask-repeat: no-repeat;
}

.setting-row {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 12px;
    font-size: var(--font-size-small);
    transition: all 0.2s;
}

.setting-row label {
    color: var(--color-text-subtle);
}

.settings-input,
input[type="color"] {
    background-color: var(--color-bg-default);
    border: 1px solid var(--color-border-default);
    border-radius: var(--radius-small);
    color: var(--color-text-default);
    padding: 4px 8px;
}

input[type="color"] {
    padding: 2px;
    height: 28px;
    cursor: pointer;
}

.slider-container {
    display: flex;
    align-items: center;
    gap: 8px;
}

.slider-label {
    min-width: 20px;
    text-align: right;
    color: var(--color-text-default);
}

.button-group {
    display: flex;
    gap: 8px;
}

.settings-button {
    flex-grow: 1;
    background-color: var(--color-bg-hover);
    border: 1px solid var(--color-border-default);
    color: var(--color-text-default);
    padding: 8px;
    border-radius: var(--radius-small);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    font-weight: 500;
    transition: all 0.2s;
}

.settings-node .settings-button:hover {
    background-color: var(--node-accent-color, var(--color-accent));
    color: var(--color-bg-panel);
    border-color: var(--node-accent-color, var(--color-accent));
}

/* Custom Toggle Switch */
.switch {
    position: relative;
    display: inline-block;
    width: 34px;
    height: 20px;
}

.switch input { 
    opacity: 0;
    width: 0;
    height: 0;
}

.switch .slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--color-border-default);
    transition: .4s;
}

.switch .slider:before {
    position: absolute;
    content: "";
    height: 12px;
    width: 12px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
}

.settings-node input:checked + .slider {
    background-color: var(--node-accent-color, var(--color-accent));
}

input:checked + .slider:before {
    transform: translateX(14px);
}

.switch .slider.round {
    border-radius: 20px;
}

.switch .slider.round:before {
    border-radius: 50%;
}

/* Custom Scrollbar for Settings Node */
.settings-container::-webkit-scrollbar {
    width: 16px;
}

.settings-container::-webkit-scrollbar-track {
    background: transparent;
}

.settings-container::-webkit-scrollbar-thumb {
    background-color: transparent; /* Hide by default */
    border-radius: 8px;
    border: 6px solid transparent;
    background-clip: content-box;
    cursor: default;
    min-height: 40px;
    transition: background-color 0.2s, filter 0.2s; /* Add transition */
}

/* Show scrollbar on hover or when settings node is selected */
.settings-node:hover .settings-container::-webkit-scrollbar-thumb,
.settings-node.is-selected .settings-container::-webkit-scrollbar-thumb {
    background-color: var(--icon-color);
}

.settings-container::-webkit-scrollbar-thumb:hover {
    filter: brightness(1.2);
}

.settings-container::-webkit-scrollbar:hover {
    cursor: default;
}

/* Custom Range Slider */
.settings-node input[type="range"] {
    -webkit-appearance: none;
    appearance: none;
    flex-grow: 1;
    height: 4px;
    background: var(--color-border-default);
    outline: none;
    opacity: 0.7;
    transition: opacity .2s;
    border-radius: 2px;
    cursor: pointer;
}

.settings-node input[type="range"]:hover {
    opacity: 1;
}

.settings-node input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 16px;
    height: 16px;
    background: var(--node-accent-color, var(--color-accent));
    cursor: pointer;
    border-radius: 50%;
    border: 2px solid var(--color-bg-panel);
    transition: background-color 0.2s;
}

.settings-node input[type="range"]::-moz-range-thumb {
    width: 14px;
    height: 14px;
    background: var(--node-accent-color, var(--color-accent));
    cursor: pointer;
    border-radius: 50%;
    border: 2px solid var(--color-bg-panel);
    transition: background-color 0.2s;
}

#project-markdown-preview {
    background-color: var(--color-bg-default);
    border-radius: var(--radius-small);
    padding: 16px;
    margin: 16px 0;
    border: 1px solid var(--color-border-default);
}

#project-markdown-preview h1 {
    margin-top: 0;
    margin-bottom: 16px;
    font-size: 20px;
    color: var(--color-text-emphasis);
    border-bottom: 1px solid var(--color-border-default);
    padding-bottom: 8px;
}

#project-markdown-preview img {
    max-width: 100%;
    border-radius: var(--radius-small);
    margin-top: 8px;
    display: block;
}

#project-markdown-preview .thumbnail-placeholder {
    color: var(--color-text-subtle);
    font-style: italic;
    font-size: var(--font-size-small);
}

.settings-separator {
    border: none;
    border-top: 1px solid var(--color-border-default);
    margin: 8px 0;
}

/* Override for setting rows inside the context menu item cards to prevent overflow */
.context-menu-item-control .setting-row {
    display: grid;
    grid-template-columns: auto 1fr; /* Label=content width, input=rest */
    gap: 12px;
    align-items: center;
    margin-bottom: 0; /* The card's flex gap handles spacing */
}

.context-menu-item-control .setting-row .settings-input {
    width: 100%;
}

/* When an input is in a flex container (like the icon preview),
   it needs flex properties to size correctly, not a percentage width. */
.context-menu-item-control .input-with-icon-preview .settings-input {
    width: auto; /* Unset the width:100% from the rule above */
    flex: 1; /* Take up remaining space within the flex wrapper */
    min-width: 0; /* Allow shrinking */
}

.theme-settings-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 16px;
    margin-top: 16px;
}

.theme-setting-card {
    background-color: var(--color-bg-default);
    border-radius: var(--radius-small);
    padding: 12px;
    border: 1px solid var(--color-border-default);
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.theme-setting-card-title {
    font-weight: 600;
    color: var(--color-text-emphasis);
    padding-bottom: 8px;
    border-bottom: 1px solid var(--color-border-default);
    margin-bottom: 4px;
}

/* Override for setting rows inside the context menu item cards to prevent overflow */
.context-menu-item-control .setting-row,
.theme-setting-card .setting-row {
    display: grid;
    grid-template-columns: auto 1fr; /* Label=content width, input=rest */
    gap: 12px;
    align-items: center;
    margin-bottom: 0; /* The card's flex gap handles spacing */
}

.context-menu-item-control .setting-row .settings-input,
.theme-setting-card .setting-row .settings-input {
    width: 100%;
}

/* For color pickers, make the input auto-sized and align to the right */
.theme-setting-card .color-picker-row {
    grid-template-columns: 1fr auto;
}

.settings-card-title {
    font-weight: 600;
    color: var(--color-text-emphasis);
    padding-bottom: 8px;
    border-bottom: 1px solid var(--color-border-default);
    margin-bottom: 4px;
}

.context-menu-settings-grid,
.theme-settings-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 16px;
    margin-top: 16px;
}

.settings-card {
    background-color: var(--color-bg-default);
    border-radius: var(--radius-small);
    padding: 12px;
    border: 1px solid var(--color-border-default);
    display: flex;
    flex-direction: column;
    gap: 10px;
}

/* Override for setting rows inside cards to prevent overflow */
.settings-card .setting-row {
    display: grid;
    grid-template-columns: auto 1fr; /* Label=content width, input=rest */
    gap: 12px;
    align-items: center;
    margin-bottom: 0; /* The card's flex gap handles spacing */
}

.settings-card .setting-row .settings-input {
    width: 100%;
}

/* When an input is in a flex container (like the icon preview),
   it needs flex properties to size correctly, not a percentage width. */
.settings-card .input-with-icon-preview .settings-input {
    width: auto; /* Unset the width:100% from the rule above */
    flex: 1; /* Take up remaining space within the flex wrapper */
    min-width: 0; /* Allow shrinking */
}

/* For color pickers, make the input auto-sized and align to the right */
.settings-card .color-picker-row {
    grid-template-columns: 1fr auto;
}

#ui-settings-card .setting-row {
    grid-template-columns: 1fr auto;
} 